import networkx as nx
import matplotlib.pyplot as plt


def visualize_graph(neighrbors_dict):
    # Create a directed graph
    G = nx.DiGraph()

    # Add vertices to the graph
    for vertex in neighrbors_dict.keys():
        G.add_node(vertex)

    # Add edges to the graph
    for vertex in vertices:
        if vertex not in neighbors_dict:
            continue
        for neighbor in neighbors_dict[vertex]:
            G.add_edge(vertex, neighbor[1], label=neighbor[0])

    # Create a layout for our nodes
    pos = nx.spring_layout(G, k=5)

    # Draw the graph
    nx.draw(G, pos, with_labels=True, node_size=3000, node_color="skyblue", font_size=10, font_color="black")

    # Add edge labels
    edge_labels = nx.get_edge_attributes(G, 'label')
    nx.draw_networkx_edge_labels(G, pos, edge_labels=edge_labels, font_color="red")

    # Show the plot
    plt.show()


# Example usage
vertices = [
    (0, "F", "F"),
    (1, "F", "F"),
    (2, "F", "F"),
    (3, "F", "F"),
    (4, "F", "F"),
    (5, "F", "F"),
    (6, "F", "F"),
    (7, "F", "F"),
    (8, "F", "F"),
    (9, "F", "F"),
    (10, "F", "F"),
    (11, "F", "F"),
    (12, "F", "F"),
    (13, "F", "F"),
    (14, "F", "F"),
    (15, "F", "F"),
    (0, "T", "F"),
    (1, "T", "F"),
    (2, "T", "F"),
    (3, "T", "F"),
    (4, "T", "F"),
    (5, "T", "F"),
    (6, "T", "F"),
    (7, "T", "F"),
    (8, "T", "F"),
    (9, "T", "F"),
    (10, "T", "F"),
    (11, "T", "F"),
    (12, "T", "F"),
    (13, "T", "F"),
    (14, "T", "F"),
    (15, "T", "F"),
    (0, "F", "T"),
    (1, "F", "T"),
    (2, "F", "T"),
    (3, "F", "T"),
    (4, "F", "T"),
    (5, "F", "T"),
    (6, "F", "T"),
    (7, "F", "T"),
    (8, "F", "T"),
    (9, "F", "T"),
    (10, "F", "T"),
    (11, "F", "T"),
    (12, "F", "T"),
    (13, "F", "T"),
    (14, "F", "T"),
    (15, "F", "T"),
    (0, "T", "T"),
    (1, "T", "T"),
    (2, "T", "T"),
    (3, "T", "T"),
    (4, "T", "T"),
    (5, "T", "T"),
    (6, "T", "T"),
    (7, "T", "T"),
    (8, "T", "T"),
    (9, "T", "T"),
    (10, "T", "T"),
    (11, "T", "T"),
    (12, "T", "T"),
    (13, "T", "T"),
    (14, "T", "T"),
    (15, "T", "T")
]
neighbors_dict = {
    (0, "F", "F"): [(0, (4, "F", "F")), (1, (1, "F", "F")), (2, (0, "F", "F")), (3, (0, "F", "F"))],
    (4, "F", "F"): [(0, (8, "F", "F")), (1, (5, "F", "F")), (2, (0, "F", "F")), (3, (4, "F", "F"))],
    (1, "F", "F"): [(0, (5, "F", "F")), (1, (2, "F", "F")), (2, (1, "F", "F")), (3, (0, "F", "F"))],
    (8, "F", "F"): [(0, (12, "F", "F")), (1, (9, "F", "F")), (2, (4, "F", "F")),
                        (3, (8, "F", "F"))],
    (5, "T", "F"): [(0, (9, "F", "F")), (1, (6, "F", "F")), (2, (1, "F", "F")), (3, (4, "F", "F"))],
    (2, "F", "F"): [(0, (6, "F", "F")), (1, (3, "F", "F")), (2, (2, "F", "F")), (3, (1, "F", "F"))],
    (12, "F", "F"): [(0, (12, "F", "F")), (1, (13, "F", "F")), (2, (8, "F", "F")),
                         (3, (12, "F", "F"))],
    (9, "F", "F"): [(0, (13, "F", "F")), (1, (10, "F", "F")), (2, (5, "F", "F")),
                        (3, (8, "F", "F"))],
    (9, "T", "F"): [(0, (13, "F", "F")), (1, (10, "F", "F")), (2, (5, "F", "F")),
                       (3, (8, "F", "F"))],
    (6, "T", "F"): [(0, (10, "F", "F")), (1, (7, "F", "F")), (2, (2, "F", "F")), (3, (5, "F", "F"))],
    (1, "T", "F"): [(0, (5, "F", "F")), (1, (2, "F", "F")), (2, (1, "F", "F")), (3, (0, "F", "F"))],
    (4, "T", "F"): [(0, (8, "F", "F")), (1, (5, "F", "F")), (2, (0, "F", "F")), (3, (4, "F", "F"))],
    (6, "F", "F"): [(0, (10, "F", "F")), (1, (7, "F", "F")), (2, (2, "F", "F")),
                        (3, (5, "F", "F"))],
    (3, "F", "F"): [(0, (7, "F", "F")), (1, (3, "F", "F")), (2, (3, "F", "F")), (3, (2, "F", "F"))],
    (13, "F", "F"): [(0, (13, "F", "F")), (1, (14, "F", "F")), (2, (9, "F", "F")),
                         (3, (12, "F", "F"))],
    (10, "F", "F"): [(0, (14, "F", "F")), (1, (11, "F", "F")), (2, (6, "F", "F")),
                         (3, (9, "F", "F"))],
    (13, "T", "F"): [(0, (13, "F", "F")), (1, (14, "F", "F")), (2, (9, "F", "F")),
                        (3, (12, "F", "F"))],
    (10, "T", "F"): [(0, (14, "F", "F")), (1, (11, "F", "F")), (2, (6, "F", "F")),
                        (3, (9, "F", "F"))],
    (8, "T", "F"): [(0, (12, "F", "F")), (1, (9, "F", "F")), (2, (4, "F", "F")), (3, (8, "F", "F"))],
    (7, "T", "F"): [(0, (11, "F", "F")), (1, (7, "F", "F")), (2, (3, "F", "F")), (3, (6, "F", "F"))],
    (2, "T", "F"): [(0, (6, "F", "F")), (1, (3, "F", "F")), (2, (2, "F", "F")), (3, (1, "F", "F"))],
    (0, "T", "F"): [(0, (4, "F", "F")), (1, (1, "F", "F")), (2, (0, "F", "F")), (3, (0, "F", "F"))],
    (7, "F", "F"): [(0, (11, "F", "F")), (1, (7, "F", "F")), (2, (3, "F", "F")),
                        (3, (6, "F", "F"))],
    (14, "F", "F"): [(0, (14, "F", "F")), (1, (15, "F", "F")), (2, (10, "F", "F")),
                         (3, (13, "F", "F"))],
    (11, "F", "T"): [(0, (15, "F", "F")), (1, (11, "F", "F")), (2, (7, "F", "F")),
                        (3, (10, "F", "F"))],
    (14, "T", "F"): [(0, (14, "F", "F")), (1, (15, "F", "F")), (2, (10, "F", "F")),
                        (3, (13, "F", "F"))],
    (12, "T", "F"): [(0, (12, "F", "F")), (1, (13, "F", "F")), (2, (8, "F", "F")),
                        (3, (12, "F", "F"))],
    (11, "T", "T"): [(0, (15, "F", "F")), (1, (11, "F", "F")), (2, (7, "F", "F")),
                       (3, (10, "F", "F"))]}

visualize_graph(neighbors_dict)
